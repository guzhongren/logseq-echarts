name: Publish

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - '*' # Push events to matching any tag format, i.e. 1.0, 20.15.10

env:
  PLUGIN_NAME: logseq-echarts

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Use Node.js
        uses: actions/setup-node@v4
      - name: Install
        run: |
          npm install -g pnpm
          pnpm install --no-frozen-lockfile
      - name: Lint
        run: pnpm run lint
      - name: Build
        id: build
        run: |
          pnpm run build
          mkdir ${{ env.PLUGIN_NAME }}
          cp README.md package.json icon.svg ${{ env.PLUGIN_NAME }}
          mv dist ${{ env.PLUGIN_NAME }}
          zip -r ${{ env.PLUGIN_NAME }}-$(git tag --sort version:refname | tail -n 1).zip ${{ env.PLUGIN_NAME }}
          ls
          echo "::set-output name=tag_name::$(git tag --sort version:refname | tail -n 1)"
      - name: Create Release
        uses: ncipollo/release-action@v1
        id: create_release
        env:
          RELEASE_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          VERSION: ${{ github.ref }}
        with:
          allowUpdates: true
          draft: false
          prerelease: false

      - name: Upload zip file
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.PLUGIN_NAME }}-${{ steps.build.outputs.tag_name }}.zip

      - name: Upload package.json
        uses: softprops/action-gh-release@v2
        with:
          files: ./package.json
      - uses: anchore/sbom-action@v0
        with:
          path: ./
          artifact-name: ${{ env.PLUGIN_NAME }}.${{ steps.build.outputs.tag_name }}.sbom.spdx.json
      - uses: anchore/sbom-action/publish-sbom@v0
